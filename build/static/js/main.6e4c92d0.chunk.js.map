{"version":3,"sources":["data/image.js","utils/function.js","components/Gallery.js","components/ImgFigure.js","components/ControllerUnit.js","index.js"],"names":["data_image","url","title","content","getRangeRandom","low","high","Math","ceil","random","get30DegRandom","Gallery","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Constant","centerPos","left","right","hPosRange","leftSectionX","rightSectionX","y","vPosRange","x","topY","images","state","imagesArrangeArray","index","isInverse","setState","rearrange","_this2","isCenter","inverse","center","sDom","ReactDOM","findDOMNode","input","sWidth","scrollWidth","sHeight","scrollHeight","sHalfWidth","sHalfHeight","dom","iWidth","iHeight","hWidth","hHeight","top","centerIndex","hPosRangeLeftSecX","hPosRangeRightSecX","hPosRangeY","vPosRangeTopY","vPosRangeX","imagesArrangeTopArray","topImageNum","floor","imagesArrangeCenterArray","splice","pos","rotate","topImageSpliceIndex","forEach","value","i","j","length","k","hPosRangeLORX","_this3","imgFigures","controllerUnit","item","push","react_default","a","createElement","components_ImgFigure","handle","key","arrange","data","ref","imgRef","components_ControllerUnit","className","style","height","window","document","body","Component","ImgFigure","handleClick","bind","assertThisInitialized","e","stopPropagation","preventDefault","styleObj","objectSpread","imgFigureClassName","onClick","src","alt","ControllerUnit","controllerClassName","render","components_Gallery","getElementById"],"mappings":"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","file":"static/js/main.6e4c92d0.chunk.js","sourcesContent":["export default [\r\n  {\r\n    \"url\": \"1.jpg\",\r\n    \"title\": \"my name is liujinxing\",\r\n    \"content\": \"my name is jinxing\"\r\n  },\r\n  {\r\n    \"url\": \"2.jpg\",\r\n    \"title\": \"my name is liujinxing\",\r\n    \"content\": \"my name is jinxing\"\r\n  },\r\n  {\r\n    \"url\": \"3.jpg\",\r\n    \"title\": \"my name is liujinxing\",\r\n    \"content\": \"my name is jinxing\"\r\n  },\r\n  {\r\n    \"url\": \"4.jpg\",\r\n    \"title\": \"my name is liujinxing\",\r\n    \"content\": \"my name is jinxing\"\r\n  },\r\n  {\r\n    \"url\": \"5.jpg\",\r\n    \"title\": \"my name is liujinxing\",\r\n    \"content\": \"my name is jinxing\"\r\n  },\r\n  {\r\n    \"url\": \"6.jpg\",\r\n    \"title\": \"my name is liujinxing\",\r\n    \"content\": \"my name is jinxing\"\r\n  },\r\n  {\r\n    \"url\": \"7.jpg\",\r\n    \"title\": \"my name is liujinxing\",\r\n    \"content\": \"my name is jinxing\"\r\n  },\r\n  {\r\n    \"url\": \"6.jpg\",\r\n    \"title\": \"my name is liujinxing\",\r\n    \"content\": \"my name is jinxing\"\r\n  },\r\n  {\r\n    \"url\": \"7.jpg\",\r\n    \"title\": \"my name is liujinxing\",\r\n    \"content\": \"my name is jinxing\"\r\n  },\r\n  {\r\n    \"url\": \"3.jpg\",\r\n    \"title\": \"my name is liujinxing\",\r\n    \"content\": \"my name is jinxing\"\r\n  },\r\n  {\r\n    \"url\": \"4.jpg\",\r\n    \"title\": \"my name is liujinxing\",\r\n    \"content\": \"my name is jinxing\"\r\n  }\r\n];","/**\r\n * 获取两个值之间的随机值\r\n * @param low\r\n * @param  high\r\n * @returns {number}\r\n */\r\nexport const getRangeRandom = (low, high) => Math.ceil(Math.random() * (high - low) + low)\r\n\r\n/**\r\n * 获取0 ~ 30 之间的一个任意正负值\r\n * @returns {string}\r\n */\r\nexport const get30DegRandom = () => (Math.random() > 0.5 ? '' : '-') + Math.ceil(Math.random() * 30)\r\n","import React, {Component} from 'react'\r\nimport images from \"../data/image\"\r\nimport {ImgFigure, ControllerUnit} from \"./index\"\r\nimport ReactDOM from 'react-dom'\r\nimport {get30DegRandom, getRangeRandom} from \"../utils\"\r\n\r\nclass Gallery extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.images = []\r\n        this.state = {\r\n            imagesArrangeArray: [\r\n                /* {\r\n                    // 定位信息\r\n                    pos: {\r\n                        left: 0,\r\n                        top: 0,\r\n                    },\r\n                    // 旋转值\r\n                    rotate: 0,\r\n\r\n                    // 是否翻转\r\n                    isInverse: false,\r\n\r\n                    // 是否居中\r\n                    isCenter: false,\r\n                } */\r\n            ]\r\n        }\r\n    }\r\n\r\n    Constant = {\r\n        centerPos: {\r\n            left: 0,\r\n            right: 0,\r\n        },\r\n        // 水平方向的取值范围\r\n        hPosRange: {\r\n            leftSectionX: [0, 0],\r\n            rightSectionX: [0, 0],\r\n            y: [0, 0]\r\n        },\r\n        // 垂直方法的取值\r\n        vPosRange: {\r\n            x: [0, 0],\r\n            topY: [0, 0]\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 翻转图片\r\n     * @param index 输入当前需要执行inverse 操作的图片对应的图片的index\r\n     * @return {Function} 这是一个闭包函数，返回一个正真的\r\n     */\r\n    inverse(index) {\r\n        let imagesArrangeArray = this.state.imagesArrangeArray\r\n        imagesArrangeArray[index].isInverse = !imagesArrangeArray[index].isInverse\r\n        this.setState({imagesArrangeArray})\r\n    }\r\n\r\n    /**\r\n     * 利用rearrange 函数，居中图片\r\n     * @param index\r\n     * @returns {Function}\r\n     */\r\n    center(index) {\r\n        this.rearrange(index)\r\n    }\r\n\r\n    /**\r\n     * 添加事件\r\n     *\r\n     * @param index\r\n     */\r\n    handle(index) {\r\n       return () => {\r\n           if (this.state.imagesArrangeArray[index].isCenter) {\r\n               this.inverse(index)\r\n           } else {\r\n               this.center(index)\r\n           }\r\n       }\r\n    }\r\n\r\n    // 组件加载完成处理\r\n    componentDidMount() {\r\n        // 获取浏览器宽度和高度\r\n        let sDom = ReactDOM.findDOMNode(this.input)\r\n        let sWidth = sDom.scrollWidth;\r\n        let sHeight = sDom.scrollHeight;\r\n        let sHalfWidth = Math.ceil(sWidth / 2);\r\n        let sHalfHeight = Math.ceil(sHeight / 2);\r\n\r\n        // 拿到一个imageFigure 的大小\r\n        let dom = ReactDOM.findDOMNode(this.images[0])\r\n        let iWidth = dom.scrollWidth,\r\n            iHeight = dom.scrollHeight,\r\n            hWidth = Math.ceil(iWidth / 2),\r\n            hHeight = Math.ceil(iHeight / 2);\r\n\r\n        this.Constant.centerPos = {\r\n            left: sHalfWidth - hWidth,\r\n            top: sHalfHeight - hHeight\r\n        }\r\n\r\n        // 计算左侧、右侧的取值范围\r\n        this.Constant.hPosRange.leftSectionX[0] = -hWidth;\r\n        this.Constant.hPosRange.leftSectionX[1] = sHalfWidth - hWidth * 3;\r\n        this.Constant.hPosRange.rightSectionX[0] = sHalfWidth + hWidth;\r\n        this.Constant.hPosRange.rightSectionX[1] = sWidth - hWidth;\r\n        this.Constant.hPosRange.y[0] = -hHeight;\r\n        this.Constant.hPosRange.y[1] = sHeight - hHeight;\r\n\r\n        // 计算上侧区域图片分布位置的取值范围\r\n        this.Constant.vPosRange.topY[0] = -hHeight;\r\n        this.Constant.vPosRange.topY[1] = sHalfHeight - hHeight * 3;\r\n        this.Constant.vPosRange.x[0] = sHalfWidth - iWidth;\r\n        this.Constant.vPosRange.x[1] = sHalfWidth;\r\n\r\n        this.rearrange(0)\r\n    }\r\n\r\n    /**\r\n     * 从新布局所有图片\r\n     *\r\n     * @param centerIndex\r\n     */\r\n    rearrange(centerIndex) {\r\n        let imagesArrangeArray = this.state.imagesArrangeArray,\r\n            Constant = this.Constant,\r\n            hPosRange = Constant.hPosRange,\r\n            vPosRange = Constant.vPosRange,\r\n            hPosRangeLeftSecX = hPosRange.leftSectionX,\r\n            hPosRangeRightSecX = hPosRange.rightSectionX,\r\n            hPosRangeY = hPosRange.y,\r\n            vPosRangeTopY = vPosRange.topY,\r\n            vPosRangeX = vPosRange.x,\r\n\r\n            imagesArrangeTopArray = [],\r\n            // 取一个或者不取一个图片放在上面\r\n            topImageNum = Math.floor(Math.random() * 2),\r\n            imagesArrangeCenterArray = imagesArrangeArray.splice(centerIndex, 1);\r\n\r\n        // 首先居中centerIndex 的图片\r\n        imagesArrangeCenterArray[0] = {\r\n            pos: Constant.centerPos,\r\n            rotate: 0,\r\n            isInverse: false,\r\n            isCenter: true,\r\n        };\r\n\r\n        // 取出要布局上侧的图片的状态信息\r\n        let topImageSpliceIndex = Math.ceil(Math.random() * (imagesArrangeArray - topImageNum));\r\n        imagesArrangeTopArray = imagesArrangeArray.splice(topImageSpliceIndex, topImageNum);\r\n\r\n        // 布局位于上侧的图片\r\n        imagesArrangeTopArray.forEach((value, index) => {\r\n            imagesArrangeTopArray[index] = {\r\n                pos: {\r\n                    top: getRangeRandom(vPosRangeTopY[0], vPosRangeTopY[1]),\r\n                    left: getRangeRandom(vPosRangeX[0], vPosRangeX[1])\r\n                },\r\n                rotate: get30DegRandom(),\r\n                isInverse: false,\r\n                isCenter: false,\r\n            }\r\n        })\r\n\r\n        // 布局左右两侧的图片\r\n        for (let i = 0, j = imagesArrangeArray.length, k = j / 2; i < j; i++) {\r\n            let hPosRangeLORX = i < k ? hPosRangeLeftSecX : hPosRangeRightSecX;\r\n\r\n            imagesArrangeArray[i] = {\r\n                pos: {\r\n                    top: getRangeRandom(hPosRangeY[0], hPosRangeY[1]),\r\n                    left: getRangeRandom(hPosRangeLORX[0], hPosRangeLORX[1])\r\n                },\r\n                rotate: get30DegRandom(),\r\n                isInverse: false,\r\n                isCenter: false,\r\n            }\r\n        }\r\n\r\n        if (imagesArrangeTopArray && imagesArrangeTopArray[0]) {\r\n            imagesArrangeArray.splice(topImageSpliceIndex, 0, imagesArrangeTopArray[0])\r\n        }\r\n\r\n        imagesArrangeArray.splice(centerIndex, 0, imagesArrangeCenterArray[0])\r\n        this.setState({imagesArrangeArray})\r\n    }\r\n\r\n    render() {\r\n        let imgFigures = [], controllerUnit = [];\r\n        images.forEach((item, index) => {\r\n            if (!this.state.imagesArrangeArray[index]) {\r\n                this.state.imagesArrangeArray[index] = {\r\n                    pos: {\r\n                        left: 0,\r\n                        top: 0,\r\n                    },\r\n\r\n                    rotate: 0,\r\n\r\n                    isInverse: false,\r\n                    isCenter: false,\r\n                }\r\n            }\r\n\r\n            // 图片信息\r\n            imgFigures.push(<ImgFigure\r\n                handle={this.handle(index)}\r\n                key={index}\r\n                arrange={this.state.imagesArrangeArray[index]}\r\n                data={item}\r\n                ref={imgRef => {\r\n                    this.images[index] = imgRef\r\n                }}/>)\r\n\r\n            // 按钮信息\r\n            controllerUnit.push(<ControllerUnit key={index} arrange={this.state.imagesArrangeArray[index]} handle={this.handle(index)}/>)\r\n        });\r\n\r\n        return (\r\n            <section className=\"stage\" style={{height: window.document.body.scrollHeight + \"px\"}} ref={input => {\r\n                this.input = input\r\n            }}>\r\n                <section className=\"img-sec\">\r\n                    {imgFigures}\r\n                </section>\r\n                <nav className=\"controller-nav\">\r\n                    {controllerUnit}\r\n                </nav>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Gallery","import React, {Component} from 'react';\r\n\r\nclass ImgFigure extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    /**\r\n     * 点击事件\r\n     */\r\n    handleClick(e) {\r\n        this.props.handle && this.props.handle()\r\n        e.stopPropagation()\r\n        e.preventDefault()\r\n\r\n    }\r\n\r\n    render() {\r\n        let styleObj = {}\r\n\r\n        // 如果有定位信息,那么使用定位信息\r\n        if (this.props.arrange.pos) {\r\n            styleObj = {...this.props.arrange.pos}\r\n        }\r\n\r\n        // 如果有图片的旋转角度、添加旋转角度\r\n        if (this.props.arrange.rotate && !styleObj[\"transform\"]) {\r\n            ([\"transform\", \"MsTransform\", \"MozTransform\", \"WebkitTransform\"]).forEach(value => {\r\n                styleObj[value] = \"rotate(\" + this.props.arrange.rotate + \"deg)\";\r\n            })\r\n        }\r\n\r\n        if (this.props.arrange.isCenter) {\r\n            styleObj[\"zIndex\"] = 11\r\n        }\r\n\r\n        let imgFigureClassName = this.props.arrange.isInverse ? \"img-figure is-inverse\" : \"img-figure\";\r\n\r\n        return (\r\n            <figure className={imgFigureClassName} style={styleObj} onClick={this.handleClick}>\r\n                <img src={\"/images/\" + this.props.data.url} alt={this.props.data.title}/>\r\n                <figcaption>\r\n                    <h2 className=\"img-title\">{this.props.data.title}</h2>\r\n                    <div className=\"img-back\" onClick={this.handleClick}>\r\n                        <p>{this.props.data.content}</p>\r\n                    </div>\r\n                </figcaption>\r\n            </figure>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImgFigure","import React, {Component} from 'react';\r\n\r\nclass ControllerUnit extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    handleClick(e) {\r\n        this.props.handle && this.props.handle()\r\n        e.stopPropagation()\r\n        e.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        let controllerClassName = \"controller-unit\"\r\n        if (this.props.arrange) {\r\n            if (this.props.arrange.isCenter) {\r\n                controllerClassName += \" is-center \"\r\n            }\r\n\r\n            if (this.props.arrange.isInverse) {\r\n                controllerClassName += \" is-inverse \"\r\n            }\r\n        }\r\n\r\n        return (\r\n            <span className={controllerClassName} onClick={this.handleClick}></span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ControllerUnit","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Gallery} from './components';\nimport './style/main.css'\n\nReactDOM.render(<Gallery />, document.getElementById('root'));\n"],"sourceRoot":""}